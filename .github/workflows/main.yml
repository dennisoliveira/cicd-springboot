name: CI-CD GithubActions

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant execute permission to Maven wrapper
        run: chmod +x mvnw

      - name: Build with Maven (skip tests)
        run: ./mvnw clean package -DskipTests

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant execute permission to Maven wrapper
        run: chmod +x mvnw

      - name: Run tests
        run: ./mvnw test

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-springboot:${{ github.run_number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-springboot:sha-${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-springboot:${{ github.run_number }}-${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-springboot:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: production
      url: https://cicd-springboot.onrender.com

    steps:
      - name: Deploy via Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
